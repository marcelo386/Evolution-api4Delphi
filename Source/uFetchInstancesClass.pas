unit uFetchInstancesClass;

//  *************************************************
//    Generated By: JsonToDelphiClass - 0.65
//    Project link: https://github.com/PKGeorgiev/Delphi-JsonToDelphiClass
//    Generated On: 2024-05-27 21:46:52
//  *************************************************
//    Created By  : Petar Georgiev - 2014
//    WebSite     : http://pgeorgiev.com
//  *************************************************

interface

uses Generics.Collections, Rest.Json;

type

TcountClass = class
private
  FChat: Extended;
  FContact: Extended;
  FMessage: Extended;
public
  property Chat: Extended read FChat write FChat;
  property Contact: Extended read FContact write FContact;
  property Message: Extended read FMessage write FMessage;
  //function ToJsonString: string;
  //class function FromJsonString(AJsonString: string): TcountClass;
end;

TSettingClass = class
private
  FAlwaysOnline: Boolean;
  FCreatedAt: String;
  FGroupsIgnore: Boolean;
  FId: String;
  FInstanceId: String;
  FMsgCall: String;
  FReadMessages: Boolean;
  FReadStatus: Boolean;
  FRejectCall: Boolean;
  FSyncFullHistory: Boolean;
  FUpdatedAt: String;
public
  property alwaysOnline: Boolean read FAlwaysOnline write FAlwaysOnline;
  property createdAt: String read FCreatedAt write FCreatedAt;
  property groupsIgnore: Boolean read FGroupsIgnore write FGroupsIgnore;
  property id: String read FId write FId;
  property instanceId: String read FInstanceId write FInstanceId;
  property msgCall: String read FMsgCall write FMsgCall;
  property readMessages: Boolean read FReadMessages write FReadMessages;
  property readStatus: Boolean read FReadStatus write FReadStatus;
  property rejectCall: Boolean read FRejectCall write FRejectCall;
  property syncFullHistory: Boolean read FSyncFullHistory write FSyncFullHistory;
  property updatedAt: String read FUpdatedAt write FUpdatedAt;
  //function ToJsonString: string;
  //class function FromJsonString(AJsonString: string): TSettingClass;
end;


TInstanceClass = class
private
  FApikey: String;
  FInstanceId: String;
  FInstanceName: String;
  FOwner: String;
  FProfileName: String;
  FProfilePictureUrl: String;
  FProfileStatus: String;
  FServerUrl: String;
  FStatus: String;

  //Versão 2.0
  FSetting: TSettingClass;
  F_count: TcountClass;
  FConnectionStatus: String;
  FName: String;
  FIntegration: String;
  FUpdatedAt: String;
  FId: String;
  FProfilePicUrl: String;
  FToken: String;
  FNumber: String;
  FOwnerJid: String;
  FCreatedAt: String;
  FClientName: String;

public
  property apikey: String read FApikey write FApikey;
  property instanceId: String read FInstanceId write FInstanceId;
  property instanceName: String read FInstanceName write FInstanceName;
  property owner: String read FOwner write FOwner;
  property profileName: String read FProfileName write FProfileName;
  property profilePictureUrl: String read FProfilePictureUrl write FProfilePictureUrl;
  property profileStatus: String read FProfileStatus write FProfileStatus;
  property serverUrl: String read FServerUrl write FServerUrl;
  property status: String read FStatus write FStatus;

  //Versão 2.0
  property Setting          : TSettingClass  read FSetting          write FSetting;
  property _count           : TcountClass    read F_count           write F_count;
  property clientName       : String         read FClientName       write FClientName;
  property connectionStatus : String         read FConnectionStatus write FConnectionStatus;
  property createdAt        : String         read FCreatedAt        write FCreatedAt;
  property id               : String         read FId               write FId;
  property integration      : String         read FIntegration      write FIntegration;
  property name             : String         read FName             write FName;
  property number           : String         read FNumber           write FNumber;
  property ownerJid         : String         read FOwnerJid         write FOwnerJid;

  property profilePicUrl: String read FProfilePicUrl write FProfilePicUrl;
  property token: String read FToken write FToken;
  property updatedAt: String read FUpdatedAt write FUpdatedAt;

  function ToJsonString: string;
  class function FromJsonString(AJsonString: string): TInstanceClass;
end;

TFetchInstancesClass = class
private
  FInstance: TInstanceClass;
public
  property instance: TInstanceClass read FInstance write FInstance;
  constructor Create;
  destructor Destroy; override;
  function ToJsonString: string;
  class function FromJsonString(AJsonString: string): TFetchInstancesClass;
end;

TRootClass = class
private
  FFetchInstances: TArray<TFetchInstancesClass>;
public
  property FetchInstances: TArray<TFetchInstancesClass> read FFetchInstances write FFetchInstances;
  destructor Destroy; override;
  function ToJsonString: string;
  class function FromJsonString(AJsonString: string): TRootClass;
end;

implementation

{TInstanceClass}


function TInstanceClass.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TInstanceClass.FromJsonString(AJsonString: string): TInstanceClass;
begin
  result := TJson.JsonToObject<TInstanceClass>(AJsonString)
end;

{TFetchInstancesClass}

constructor TFetchInstancesClass.Create;
begin
  inherited;
  FInstance := TInstanceClass.Create();
end;

destructor TFetchInstancesClass.Destroy;
begin
  FInstance.free;
  inherited;
end;

function TFetchInstancesClass.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TFetchInstancesClass.FromJsonString(AJsonString: string): TFetchInstancesClass;
begin
  result := TJson.JsonToObject<TFetchInstancesClass>(AJsonString)
end;

{TRootClass}

destructor TRootClass.Destroy;
var
  LFetchInstancesItem: TFetchInstancesClass;
begin

 for LFetchInstancesItem in FFetchInstances do
   LFetchInstancesItem.free;

  inherited;
end;

function TRootClass.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TRootClass.FromJsonString(AJsonString: string): TRootClass;
begin
  result := TJson.JsonToObject<TRootClass>(AJsonString)
end;

end.

