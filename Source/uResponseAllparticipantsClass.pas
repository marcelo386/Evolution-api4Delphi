unit uResponseAllparticipantsClass;

//  *************************************************
//    Generated By: JsonToDelphiClass - 0.65
//    Project link: https://github.com/PKGeorgiev/Delphi-JsonToDelphiClass
//    Generated On: 2024-09-22 11:02:29
//  *************************************************
//    Created By  : Petar Georgiev - 2014
//    WebSite     : http://pgeorgiev.com
//  *************************************************

interface

uses Generics.Collections, Rest.Json;

type

TParticipantsClass = class
private
  FAdmin: String;
  FId: String;
  FName: String;
public
  property admin: String read FAdmin write FAdmin;
  property id: String read FId write FId;
  property name: String read FName write FName;
  function ToJsonString: string;
  class function FromJsonString(AJsonString: string): TParticipantsClass;
end;

TAllparticipantsClass = class
private
  FParticipants: TArray<TParticipantsClass>;
public
  property participants: TArray<TParticipantsClass> read FParticipants write FParticipants;
  destructor Destroy; override;
  function ToJsonString: string;
  class function FromJsonString(AJsonString: string): TAllparticipantsClass;
end;

implementation

{TParticipantsClass}


function TParticipantsClass.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TParticipantsClass.FromJsonString(AJsonString: string): TParticipantsClass;
begin
  result := TJson.JsonToObject<TParticipantsClass>(AJsonString)
end;

{TAllparticipantsClass}

destructor TAllparticipantsClass.Destroy;
var
  LparticipantsItem: TParticipantsClass;
begin

 for LparticipantsItem in FParticipants do
   LparticipantsItem.free;

  inherited;
end;

function TAllparticipantsClass.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TAllparticipantsClass.FromJsonString(AJsonString: string): TAllparticipantsClass;
begin
  result := TJson.JsonToObject<TAllparticipantsClass>(AJsonString)
end;

end.
