unit uResponseInfoGroupClass;

//  *************************************************
//    Generated By: JsonToDelphiClass - 0.65
//    Project link: https://github.com/PKGeorgiev/Delphi-JsonToDelphiClass
//    Generated On: 2024-09-22 11:43:01
//  *************************************************
//    Created By  : Petar Georgiev - 2014
//    WebSite     : http://pgeorgiev.com
//  *************************************************

interface

uses Generics.Collections, Rest.Json;

type

TParticipantsClass = class
private
  FAdmin: String;
  FId: String;
public
  property admin: String read FAdmin write FAdmin;
  property id: String read FId write FId;
  function ToJsonString: string;
  class function FromJsonString(AJsonString: string): TParticipantsClass;
end;

TInfoGroupClass = class
private
  FAnnounce: Boolean;
  FCreation: Extended;
  FId: String;
  FOwner: String;
  FParticipants: TArray<TParticipantsClass>;
  FRestrict: Boolean;
  FSize: Extended;
  FSubject: String;
  FSubjectOwner: String;
  FSubjectTime: Extended;
public
  property announce: Boolean read FAnnounce write FAnnounce;
  property creation: Extended read FCreation write FCreation;
  property id: String read FId write FId;
  property owner: String read FOwner write FOwner;
  property participants: TArray<TParticipantsClass> read FParticipants write FParticipants;
  property restrict: Boolean read FRestrict write FRestrict;
  property size: Extended read FSize write FSize;
  property subject: String read FSubject write FSubject;
  property subjectOwner: String read FSubjectOwner write FSubjectOwner;
  property subjectTime: Extended read FSubjectTime write FSubjectTime;
  destructor Destroy; override;
  function ToJsonString: string;
  class function FromJsonString(AJsonString: string): TInfoGroupClass;
end;

implementation

{TParticipantsClass}


function TParticipantsClass.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TParticipantsClass.FromJsonString(AJsonString: string): TParticipantsClass;
begin
  result := TJson.JsonToObject<TParticipantsClass>(AJsonString)
end;

{TInfoGroupClass}

destructor TInfoGroupClass.Destroy;
var
  LparticipantsItem: TParticipantsClass;
begin

 for LparticipantsItem in FParticipants do
   LparticipantsItem.free;

  inherited;
end;

function TInfoGroupClass.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TInfoGroupClass.FromJsonString(AJsonString: string): TInfoGroupClass;
begin
  result := TJson.JsonToObject<TInfoGroupClass>(AJsonString)
end;

end.
